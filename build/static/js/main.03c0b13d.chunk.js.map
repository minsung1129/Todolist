{"version":3,"sources":["compo/Todolisttemplate.js","compo/Form.js","compo/Todoitem.js","compo/Todoitemlist.js","App.js","serviceWorker.js","index.js"],"names":["TodoListTemplate","_ref","form","children","react_default","a","createElement","className","console","log","Form","value","value2","value3","value4","onChange","onChange2","onChange3","onChange4","onCreate","onKeyPress","type","onClick","TodoItem","state","editing","text","text2","text3","text4","handleToggleEdit","_this","setState","handleChange","e","_e$target","target","name","Object","defineProperty","prevProps","prevState","_this$props","this","props","todo","onUpdate","id","replace","_this2","_this$props2","checked","onToggle","onRemove","placeholder","stopPropagation","concat","Component","defaultProps","TodoItemList","todos","todoList","map","compo_Todoitem","key","App","input","input2","input3","input4","handleChange2","handleChange3","handleChange4","handleCreate","_this$state","st_date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","alert","handleKeyPress","handleToggle","index","findIndex","selected","nextTodos","toConsumableArray","objectSpread","handleRemove","filter","handleUpdate","data","_this$state2","compo_Todolisttemplate","src_compo_Form","Todoitemlist","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.03c0b13d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Todolisttemplate.css';\r\n\r\nconst TodoListTemplate = ({form, children}) => {\r\n    \r\n    return (\r\n    <main className=\"todo-list-template\">\r\n      <div className=\"title\">\r\n        To Do List\r\n      </div>\r\n      <section className=\"form-wrapper\">\r\n        {form} \r\n        {console.log(form)}\r\n      </section>\r\n      <section className=\"todos-wrapper\">\r\n        { children }\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default TodoListTemplate;","import React from 'react';\r\nimport './Form.css';\r\n\r\nconst Form = ({value, value2, value3, value4, onChange, onChange2, onChange3, onChange4, onCreate, onKeyPress}) => {\r\n    return (\r\n    <div className=\"form\">\r\n      <div>\r\n      제목 : <input value={value} onChange={onChange} onKeyPress={onKeyPress} />\r\n      내용 : <input value={value2} onChange={onChange2} onKeyPress={onKeyPress}/>\r\n      </div>\r\n      <div>\r\n        기한 : <input type=\"datetime-local\" value={value3} onChange={onChange3} />\r\n        우선순위 : <input type=\"number\" value={value4} onChange={onChange4}/>\r\n      </div>\r\n      <div className=\"create-button\" onClick={onCreate}>\r\n        추가\r\n      </div>   \r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Form;","import React, { Component } from 'react';\r\nimport './Todoitem.css';\r\n\r\nclass TodoItem extends Component {\r\n  \r\n  static defaultProps = {\r\n    todo: {\r\n        text: '',\r\n        text2: '',\r\n        text3: 'X',\r\n        text4: '',\r\n        id: 0\r\n    },\r\n  }\r\n    state = {\r\n        editing: false,\r\n        text: '',\r\n        text2: '',\r\n        text3: '',\r\n        text4: ''\r\n    }\r\n    \r\n      handleToggleEdit = () => {\r\n        const { editing } = this.state;\r\n        this.setState({ editing: !editing });\r\n      }\r\n    \r\n      handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        this.setState({\r\n          [name]: value\r\n        });\r\n      }\r\n    \r\n    \r\n      componentDidUpdate(prevProps, prevState) {\r\n        \r\n        const { todo, onUpdate, id } = this.props;\r\n        if(!prevState.editing && this.state.editing) {\r\n         this.setState({\r\n            text: todo.text,\r\n            text2: todo.text2,\r\n            text3: todo.text3,\r\n            text4: todo.text4\r\n          })\r\n        }\r\n    \r\n        if (prevState.editing && !this.state.editing) {\r\n          onUpdate( id, {\r\n            text: this.state.text,\r\n            text2: this.state.text2,\r\n            text3: this.state.text3.replace('T',' '),\r\n            text4: this.state.text4\r\n          });\r\n        \r\n        }\r\n      }\r\n    \r\n    render() {\r\n    const { editing } = this.state;\r\n    const {text, text2, text4, text3, checked, onToggle, onRemove, id, onUpdate } = this.props;\r\n \r\n    if (editing) { \r\n        return (\r\n            <div>\r\n            <input\r\n              value={this.state.text}\r\n              name=\"text\"\r\n              placeholder=\"제목\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <div></div>\r\n            <input\r\n              value={this.state.text2}\r\n              name=\"text2\"\r\n              placeholder=\"내용\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <div></div>\r\n            <input\r\n              type=\"datetime-local\"\r\n              value={this.state.text3}\r\n              name=\"text3\"\r\n              placeholder=\"기한\"\r\n              onChange={this.handleChange}\r\n            />\r\n            \r\n            <div>\r\n            </div>\r\n            <input\r\n              type=\"number\"\r\n              value={this.state.text4}\r\n              name=\"text4\"\r\n              placeholder=\"우선순위\"\r\n              onChange={this.handleChange}\r\n            />\r\n\r\n          <button onClick={this.handleToggleEdit}>적용</button>\r\n          \r\n          </div>\r\n        );\r\n      }\r\n      \r\n    return (\r\n      \r\n      <div className=\"todo-item\" onClick={() => onToggle(id)}>\r\n        <div className=\"remove\" onClick={(e) => {\r\n          e.stopPropagation(); \r\n          onRemove(id)}\r\n        }>&times;</div> \r\n        <div className={`todo-text ${checked && `checked`}`}>\r\n          <div>제목 : {text}</div>\r\n          <div>내용 : {text2} </div>\r\n          <div>기한 : {text3} </div>\r\n          <div>우선순위 : {text4} </div>\r\n          \r\n        </div>\r\n        <div className=\"create-button\" onClick={(e) => {\r\n          e.stopPropagation(); \r\n          this.handleToggleEdit() \r\n          }}>\r\n        수정\r\n        </div> \r\n        {\r\n          checked && (<div className=\"check-mark\">✓</div>)\r\n        }\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItem;","import React, { Component } from 'react';\r\nimport TodoItem from './Todoitem';\r\n\r\nclass TodoItemList extends Component {\r\n  render() {\r\n    const { todos, onToggle, onRemove, onUpdate } = this.props;\r\n    \r\n    const todoList = todos.map(\r\n        ({id, text, text2, text3, text4, checked}) => (\r\n          <TodoItem\r\n            id={id}\r\n            text={text}\r\n            text2={text2}\r\n            text3={text3}\r\n            text4={text4}\r\n            checked={checked}\r\n            onToggle={onToggle}\r\n            onRemove={onRemove}\r\n            onUpdate={onUpdate}\r\n            key={id}\r\n          />\r\n        )\r\n      );\r\n\r\n    return (\r\n        <div>\r\n            {todoList}    \r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoItemList;","import React, { Component } from 'react';\nimport TodoListTemplate from './compo/Todolisttemplate.js';\nimport Form from './compo/Form.js';\nimport TodoItemList from './compo/Todoitemlist.js';\n\nclass App extends Component {\n\n  id = 8\n  state = {\n    input: '',\n    input2: '',\n    input3: 'X',\n    input4: '',\n    todos: [\n      { id: 0, text: ' 새로운 TODO(제목과 내용)를 작성할 수 있다.', text2: '일', text3: \"2019-05-16 14:00\", text4:'1', checked: true },\n      { id: 1, text: ' TODO 목록을 볼 수 있다.', text2: '이', text3: \"2019-05-16 14:00\", text4:'2', checked: true },\n      { id: 2, text: ' TODO 항목의 제목과 내용을 수정할 수 있다.', text2: '삼', text3: \"2019-05-16 14:00\", text4:'3',checked: true },\n      { id: 3, text: ' TODO 항목을 삭제할 수 있다.', text2: '사', text3: \"2019-05-16 14:00\", text4:'4',checked: true },\n      { id: 4, text: ' 사용자의 선택에 의해 TODO에는 마감 기한을 넣을 수 있다.', text2: '오', text3: \"2019-05-16 14:00\", text4:'5',checked: true },\n      { id: 5, text: ' TODO 항목의 우선순위를 설정 및 조절할 수 있다.', text2: '육', text3: \"2019-05-16 14:00\", text4:'6',checked: true },\n      { id: 6, text: ' TODO 항목에 대한 완료 처리를 할 수 있다.', text2: '칠', text3: \"2019-05-16 14:00\", text4:'7',checked: true },\n      { id: 7, text: ' 마감기한이 지난 TODO에 대해 알림을 노출할 수 있다.', text2: '팔', text3: \"2019-05-16 14:00\", text4:'8',checked: false }\n    ]\n  }\n\n\n  handleChange = (e) => {\n    this.setState({\n      input: e.target.value, \n    });\n  }\n\n  handleChange2 = (e) => {\n    this.setState({\n      input2: e.target.value\n    });\n  }\n\n  handleChange3 = (e) => {\n    \n    this.setState({\n      input3: e.target.value,\n    });\n    \n    \n  }\n\n  handleChange4 = (e) => {\n    this.setState({\n      input4: e.target.value\n    });\n  }\n\n  handleCreate = () => {\n    const { input, input2, input3, input4, todos } = this.state;\n    this.setState({\n      input: '', \n      input2: '', \n      input3: 'X',\n      input4: '',\n      todos: todos.concat({\n        id: this.id++,\n        text: input,\n        text2: input2,\n        text3: input3.replace('T',' '),\n        text4: input4,\n        checked: false\n      })\n    });\n    var st_date = new Date().getFullYear() + '-0' + new Date().getMonth() + '-' + new Date().getDate()\n              + ' ' + new Date().getHours() +':' + new Date().getMinutes();\n    {this.state.input3 < st_date ? alert(input +'이(가) 마감되었습니다.') : alert(input +'이(가) 등록되었습니다.') }\n  }\n\n  handleKeyPress = (e) => {\n    if(e.key === 'Enter') {\n      this.handleCreate();\n    }\n  }\n\n  handleToggle = (id) => {\n    const { todos } = this.state;\n\n    const index = todos.findIndex(todo => todo.id === id);\n    const selected = todos[index]; \n    const nextTodos = [...todos]; \n        nextTodos[index] = { \n      ...selected, \n      checked: !selected.checked\n    };\n\n    this.setState({\n      todos: nextTodos\n    });\n  }\n\n  handleRemove = (id) => {\n    const { todos } = this.state;\n    this.setState({\n      todos: todos.filter(todo => todo.id !== id)\n    });\n  }\n\n  handleUpdate = (id, data) => {\n    const { todos } = this.state;\n    this.setState({\n      todos: todos.map(\n        todo => todo.id === id\n          ? { ...todo, ...data } \n          : todo \n      )\n    })\n  }\n\n  render() {\n    const { input, input2, input3, input4, todos } = this.state;\n    const {\n      handleChange,\n      handleChange2,\n      handleChange3,\n      handleChange4,\n      handleCreate,\n      handleKeyPress,\n      handleToggle,\n      handleRemove,\n      handleUpdate\n    } = this;\n\n    return (\n      \n      <TodoListTemplate form={(\n        <Form \n          value={input}\n          value2={input2}\n          value3={input3}\n          value4={input4}\n          onKeyPress={handleKeyPress}\n          onChange={handleChange}\n          onChange2={handleChange2}\n          onChange3={handleChange3}\n          onChange4={handleChange4}\n          onCreate={handleCreate}\n        />\n      )}>\n      \n      <TodoItemList \n          todos={todos} \n          onToggle={handleToggle} \n          onRemove={handleRemove} \n          onUpdate={handleUpdate}\n          onChange={handleChange}\n          onChange2={handleChange2}\n          onChange3={handleChange3}\n          onChange4={handleChange4}\n          value={input}\n          value2={input2}\n          value3={input3}\n          value4={input4}\n      />\n      </TodoListTemplate> \n   \n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}